@page "/movies" 
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using BlazorWebAppMovies.Models
@using BlazorWebAppMovies.Data
@inject IDbContextFactory<BlazorWebAppMovies.Data.BlazorWebAppMoviesContext> DbFactory

@*@page "/movies" <--- ruta de la página*@

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="movies/create">Create New</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Title</th>
            <th>ReleaseDate</th>
            <th>Genre</th>
            <th>Price</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var movie in movies)
        {
            <tr>
                <td>@movie.Title</td>
                <td>@movie.ReleaseDate</td>
                <td>@movie.Genre</td>
                <td>@movie.Price</td>
                <td>
                    <a href="@($"/movies/details?id={movie.Id}")">Details</a> | <a href="@($"/movies/edit?id={movie.Id}")">Edit</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@code {
    private BlazorWebAppMoviesContext context = default!;

    private List<Movie> movies = new();

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();

        movies = context.Movie // <--- para hacer queries a un modelo
            .ToList(); 
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
